#!/bin/bash

# Viridian server management utilities
#
# Made for my convenience because I'm a lazy admin

# Usage information - shown with no args or -h
if [ "$1" == "" ] || [ "$1" == "-h" ]
then
	echo "Usage:"
	echo "	sshlog: shows failed ssh auths"
	echo "		clear: clears bad ssh auths from auth.log"
	echo " 		ban: bans offenders"
fi

# sshlog - Displays a list of IPs which have attempted and failed SSH auth
# shows number of failed attempts, address, and country of origin, sorted by number of failures
# with 'clear' or 'ban', either clears auth.log of ssh attempts or bans offenders

if [ "$1" == "sshlog" ]
then
	if [ "$2" == "clear" ]; then
		badlogins=$(cat /var/log/auth.log | grep Failed | grep ssh2 | sed 's/^.*from //g' | sed 's/ port.*$//g' | sort | uniq -c | sort -n | awk '{if ($1 > 0) print $2}')
		for i in $badlogins
		do
			sed -i "/$i/d" /var/log/auth.log
		done
	elif [ "$2" == "ban" ]; then
		badlogins=$(cat /var/log/auth.log | grep Failed | grep ssh2 | sed 's/^.*from //g' | sed 's/ port.*$//g' | sort | uniq -c | sort -n | awk '{if ($1 > 20) print $2}')
		for i in $badlogins
		do
			iptables -I INPUT -s $i -j DROP
			sed -i "/$i/d" /var/log/auth.log
			echo $i >> /viridian/etc/bad-ips
			echo Banned $i.
		done
	else
		cat /var/log/auth.log | grep Failed | grep ssh2 | sed 's/^.*from //g' | sed 's/ port.*$//g' | sort | uniq -c | sort -n | while read line
		do
			echo -n "$line "
			echo $(echo $line | sed 's/  */ /g' | sed 's/^ //g' | cut -d' ' -f2 | xargs geoiplookup | sed 's/.*: //g' | sed 's/ /?/g' | sed '0,/..,/s/\(..\),/\1/')
		done | column -t | sed 's/?/ /g'
	fi
fi
